{"mappings":"gfAAA,IAoBIA,EApBJC,EAAAC,EAAA,SAEMC,EAAS,CACb,cACA,UACA,kBACA,aACA,cAGIC,EAAO,CACXC,SAAUC,SAASC,cAAc,kBACjCC,YAAaF,SAASC,cAAc,cACpCE,cAAeH,SAASC,cAAc,gBACtCG,UAAWJ,SAASC,cAAc,8BA+BpC,SAASI,EAAWC,GAEhB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAUiBC,EAAKC,EAVhBC,GAUWF,EAVU,IAULC,EAVW,IAW9BE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IAThDM,YAAW,WACTrB,EAAAsB,OAAOC,QAAQ,GAASC,OAANb,EAAM,cACxBE,EAAQ,CAAEF,QAAOM,SACjBH,EAAO,CAAEH,QAAOM,Q,GACfA,E,IAhCTd,EAAKC,SAASqB,iBAAiB,SAE/B,WAGA,IAAMC,EAAWxB,EAAOyB,IAAIjB,GAuDxBP,EAAKM,UAAUmB,UAAY,GAC3B5B,EAAAsB,OAAOO,QAAS,SACjB1B,EAAKK,cAAcsB,YAAiB,uCArDvClB,QAAQmB,IAAIL,GACTM,MAAK,SAAAC,GA8BR,IAIwBC,EAjCpBC,QAAQC,MAAkBH,EA8BhBI,MAAK,SAACC,EAAGC,G,OAAMD,EAAErB,KAAOsB,EAAEtB,I,KA3BdlB,EAARkC,EAqDd9B,EAAKK,cAAcsB,YAAc,6BAAmFN,OAAhCzB,EAAY,GAAGY,MAAM,aAA+Ba,OAApBzB,EAAY,GAAGkB,KAAK,SAvBpHiB,EAwBiBnC,EAtBrCsB,YAAW,WACPlB,EAAKM,UAAUmB,UAAY,GAE3BM,EAAYP,KAAI,SAACa,EAAMC,GACvB,IAAMC,EAAW,WAA8BlB,OAAnBiB,EAAM,EAAE,aAAiCjB,OAAtBgB,EAAK7B,MAAM,aAAqBa,OAAVgB,EAAKvB,KAAK,cAE/Ed,EAAKM,UAAUkC,mBAAmB,YAAaD,E,MAEhD,I,IAlCJE,OAAM,SAAAC,G,OAAWV,QAAQW,IAAK,kB","sources":["src/js/04-horses.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst horses = [\n  'Secretariat',\n  'Eclipse',\n  'West Australian',\n  'Flying Fox',\n  'Seabiscuit',\n];\n\nconst refs = {\n  startBtn: document.querySelector('.js-start-race'),\n  winnerField: document.querySelector('.js-winner'),\n  progressField: document.querySelector('.js-progress'),\n  tebleBody: document.querySelector('.js-results-table > tbody'),\n};\n\n\n\n\nlet raceResults;\n\nrefs.startBtn.addEventListener('click', onStart);\n\nfunction onStart() {\n\n    // const promises = horses.map(horse =>startHorse(horse));\nconst promises = horses.map(startHorse); // сокращенная запись строки сверху\n\nraceStarted();\n\nPromise.all(promises)\n  .then(results => {\n    console.table(sortResults(results));\n    // console.log(`заезд окончен, победитель ${results[0].horse}!`);\n    \n    raceResults = results;\n    raceFinished();\n\n\n    \n  })\n  .catch(trouble => console.log(`we have trouble`));\n}\n\nfunction startHorse(horse) {\n    // Notify.success(`${horse} start`);\n    return new Promise((resolve, reject) => {\n      const time = getRandomTime(1000, 4000);\n  \n      setTimeout(() => {\n        Notify.success(`${horse} finished`);\n        resolve({ horse, time });\n        reject({ horse, time });\n      }, time);\n    });\n}\n\nfunction getRandomTime(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction sortResults(data) {\n  return data.sort((a, b) => a.time - b.time);\n}\n\nfunction createTrMarkUp(raceResults) {\n\n    setTimeout(() => {\n        refs.tebleBody.innerHTML = \"\";\n \n        raceResults.map((item, index) => {\n        const trMarkUp = `<tr><td>${index+1}</td><td>${item.horse}</td><td>${item.time}</td></tr>`;\n       \n        refs.tebleBody.insertAdjacentHTML('beforeend', trMarkUp);\n      });\n    }, 2000);\n\n \n}\n\nfunction raceStarted() {\n    refs.tebleBody.innerHTML = \"\";\n    Notify.failure(`START`);\n   refs.progressField.textContent =    'Заїзд почався, ставки не приймаются!';\n}\n\nfunction raceFinished() {\n      \n    refs.progressField.textContent = `Заїзд закінчівся, переміг ${raceResults[0].horse} з часом ${raceResults[0].time} ms. ` ; \n    createTrMarkUp(raceResults);\n       \n}\n\n\n"],"names":["$d2a43a02dc0d9f4e$var$raceResults","$h6c0i","parcelRequire","$d2a43a02dc0d9f4e$var$horses","$d2a43a02dc0d9f4e$var$refs","startBtn","document","querySelector","winnerField","progressField","tebleBody","$d2a43a02dc0d9f4e$var$startHorse","horse","Promise","resolve","reject","min","max","time","Math","floor","random","setTimeout","Notify","success","concat","addEventListener","promises","map","innerHTML","failure","textContent","all","then","results","raceResults1","console","table","sort","a","b","item","index","trMarkUp","insertAdjacentHTML","catch","trouble","log"],"version":3,"file":"04-horses.2a774bc2.js.map"}